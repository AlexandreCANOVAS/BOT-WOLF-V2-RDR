require('dotenv').config();
const { Client, GatewayIntentBits } = require('discord.js');

// Remplacez par votre token de bot
const TOKEN = process.env.DISCORD_TOKEN; // Charge le token depuis les variables d'environnement
const PREFIX = '-'; // Pr√©fixe pour les commandes

const client = new Client({
  intents: [
    GatewayIntentBits.Guilds,              // Permet d'interagir avec les serveurs
    GatewayIntentBits.GuildMessages,       // Permet de lire et r√©pondre aux messages
    GatewayIntentBits.MessageContent,      // Permet de lire le contenu des messages
    GatewayIntentBits.GuildMembers         // Permet de g√©rer les r√¥les et membres du serveur
  ],
});

// Lors de la connexion du bot
client.once('ready', () => {
  console.log(`Bot connect√© en tant que ${client.user.tag}`);
});

// √âcoute des messages entrants
client.on('messageCreate', async (message) => {
  console.log("Message re√ßu :");
  console.log(`Auteur : ${message.author.tag}`);
  console.log(`Contenu brut : "${message.content}"`);
  console.log(`Type : ${message.type}`);
  // Ignorer les messages du bot lui-m√™me
  if (message.author.bot) return;

  // V√©rifie si le message commence par le pr√©fixe
  if (!message.content.startsWith(PREFIX)) return;

  // Divise le message en commande et arguments
  const args = message.content.slice(PREFIX.length).trim().split(/ +/);
  const command = args.shift().toLowerCase();

  // Commande 'accepter'
  if (command === 'accepter') {
    const member = message.mentions.members.first();

    if (!member) {
      return message.reply('Veuillez mentionner un membre valide pour accepter la candidature.');
    }

    const roleImmigre = message.guild.roles.cache.find((role) => role.name === 'üó∫| Immigr√©');
    const roleResident = message.guild.roles.cache.find((role) => role.name === 'üè†| R√©sident');
    const roleRPVocal = message.guild.roles.cache.find((role) => role.name === 'üéô | RP vocal');

    // V√©rification des r√¥les existants sur le serveur
    if (!roleImmigre || !roleResident || !roleRPVocal) {
      return message.reply('Les r√¥les "immigr√©", "r√©sident" ou "RP vocal" sont introuvables sur ce serveur.');
    }

    try {
      // Retirer le r√¥le "immigr√©" et attribuer les r√¥les "r√©sident" et "RP vocal"
      if (member.roles.cache.has(roleImmigre.id)) {
        await member.roles.remove(roleImmigre);
      }
      await member.roles.add(roleResident);
      await member.roles.add(roleRPVocal);

      // Envoi d'un message priv√© √† l'utilisateur concern√©
      await member.send(
        `Bonjour, 

Vous venez d'√™tre accept√© dans le serveur ! :grin: 
F√©licitations √† vous ! :partying_face: 

:page_with_curl:  - Vous pouvez d√®s √† pr√©sent faire le tour des cat√©gories pour prendre en compte tout son contenu. 

:money_with_wings:  - Familiarisez-vous avec le bot dans la cat√©gorie Compte et faites un !money dans le premier salon pour ouvrir votre compte en banque.

Si vous avez des questions, nous restons bien entendu disponibles, soit via un ticket si vous √™tes timides, soit directement dans le salon discussion :smile: 

Nous sommes tous l√† pour vous r√©pondre.

:warning: Pour votre premi√®re session, pensez √† vous rendre au bureau des sh√©rifs afin de vous faire recenser. 
Passez ensuite √† l'√©curie ou au ranch pour recenser votre cheval. :warning: 

A bient√¥t en RP sur **${message.guild.name}**.`
      );

      // Confirmation dans le salon
      message.channel.send(
        `Une candidature a √©t√© accept√©e et les r√¥les \`üè† R√©sident\` et \`üéô RP vocal\` ont √©t√© attribu√©s. :white_check_mark:`
      );
    } catch (error) {
      console.error(error);
      message.reply("Une erreur est survenue lors de l'attribution des r√¥les.");
    }
  }
});

// Connexion du bot
client.login(TOKEN);
